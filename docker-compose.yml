services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - frontend-build:/app/dist:rw
    dns:
      - 8.8.8.8
      - 8.8.4.4
    # This service will exit after building, that's expected behavior
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://ai_govern_user:ai_govern_password@postgres:5432/ai_govern
      - SESSION_SECRET=your_strong_random_session_secret
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
    networks:
      - ai-govern-network
    volumes:
      - uploads:/app/uploads
      - frontend-build:/app/dist:ro
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=ai_govern_user
      - POSTGRES_PASSWORD=ai_govern_password
      - POSTGRES_DB=ai_govern
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./grant-permissions.sql:/docker-entrypoint-initdb.d/grant-permissions.sql
    networks:
      - ai-govern-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_govern_user -d ai_govern"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  ai-govern-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
  uploads:
  frontend-build: 