# docker-compose.yml (For local dev ONLY - not for AWS deployment)
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      # Use .env file or provide directly for local dev
      - DATABASE_URL=postgresql://dev_user:dev_password@postgres_local:5432/dev_db?sslmode=disable
      - REDIS_URL=redis://redis_local:6379
      - SESSION_SECRET=local_dev_secret_!@#$
      - NODE_ENV=development
      # Add local S3 mock vars if using one (e.g., MinIO) or disable S3 locally
      # - S3_UPLOADS_BUCKET_NAME=local-uploads
      # - AWS_REGION=us-west-2
      # - AWS_ENDPOINT_URL=http://minio:9000
      # - AWS_ACCESS_KEY_ID=minioadmin
      # - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      postgres_local:
        condition: service_healthy
      redis_local:
        condition: service_started # Redis starts fast
    networks:
      - local-network
    volumes:
       # Optional: Mount source code for live reload in dev (requires tsx/nodemon in CMD)
       # - .:/app
       # - /app/node_modules # Prevent host node_modules from overwriting container's
       - uploads_local:/app/uploads # Keep local uploads volume ONLY IF S3 is disabled for local dev
    command: ["npm", "run", "dev"] # Use dev command for live reload

  postgres_local:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=dev_db
    ports:
      - "5433:5432" # Map to different host port to avoid conflicts
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
    networks:
      - local-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d dev_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis_local:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - local-network
    restart: unless-stopped

networks:
  local-network:
    driver: bridge

volumes:
  postgres_local_data:
  uploads_local: # Only if needed for local dev without S3