FROM node:20-alpine

WORKDIR /app

# Install netcat for network connectivity checks
RUN apk add --no-cache netcat-openbsd

# Copy package files and npm config
COPY package*.json .npmrc ./

# Install dependencies with retry logic and increased network timeout
RUN npm config set registry https://registry.npmjs.org/ && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set network-timeout 300000 && \
    npm install --no-fund --loglevel verbose || \
    (sleep 5 && npm install --no-fund --loglevel verbose) || \
    (sleep 10 && npm install --no-fund --loglevel verbose)

# Copy the rest of the backend code
COPY server/ ./server/
COPY shared/ ./shared/
COPY types/ ./types/
COPY db/ ./db/
COPY drizzle.config.ts .
COPY tsconfig.json .

# Copy frontend-related files needed by the server
COPY vite.config.ts .
COPY tailwind.config.ts .
COPY postcss.config.js .
COPY components.json .
COPY client/ ./client/

# Create necessary directories
RUN mkdir -p /app/uploads /app/server/public /app/dist/public

# Copy entry point script and fix script
COPY docker-entrypoint.sh .
COPY fix-frontend.sh .
RUN chmod +x docker-entrypoint.sh fix-frontend.sh

# Expose port
EXPOSE 5000

# Set environment variables
ENV NODE_ENV=production

# Use entry point script
ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["npm", "run", "dev"] 