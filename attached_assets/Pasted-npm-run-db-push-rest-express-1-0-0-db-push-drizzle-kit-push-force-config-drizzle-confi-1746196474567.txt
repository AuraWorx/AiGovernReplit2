npm run db:push

> rest-express@1.0.0 db:push
> drizzle-kit push --force --config=./drizzle.config.ts

Reading config file '/opt/apps/AiGovernOriginal/AiGovernReplit2/drizzle.config.ts'
Using 'pg' driver for database querying
[âœ“] Pulling schema from database...

 Warning  You are about to execute current statements:

CREATE TABLE IF NOT EXISTS "activities" (
        "id" serial PRIMARY KEY NOT NULL,
        "action" text NOT NULL,
        "description" text NOT NULL,
        "entity_type" text NOT NULL,
        "entity_id" integer NOT NULL,
        "tenant_id" integer NOT NULL,
        "user_id" integer NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS "analyses" (
        "id" serial PRIMARY KEY NOT NULL,
        "name" text NOT NULL,
        "analysis_type" text NOT NULL,
        "status" text DEFAULT 'pending' NOT NULL,
        "dataset_id" integer,
        "webhook_data_id" integer,
        "results_path" text,
        "tenant_id" integer NOT NULL,
        "initiated_by_id" integer NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "completed_at" timestamp
);

CREATE TABLE IF NOT EXISTS "datasets" (
        "id" serial PRIMARY KEY NOT NULL,
        "name" text NOT NULL,
        "description" text,
        "file_name" text NOT NULL,
        "file_size" integer NOT NULL,
        "file_type" text NOT NULL,
        "file_path" text NOT NULL,
        "uploaded_by_id" integer NOT NULL,
        "tenant_id" integer NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS "tenants" (
        "id" serial PRIMARY KEY NOT NULL,
        "name" text NOT NULL,
        "schema_name" text NOT NULL,
        "is_active" boolean DEFAULT true NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL,
        CONSTRAINT "tenants_name_unique" UNIQUE("name"),
        CONSTRAINT "tenants_schema_name_unique" UNIQUE("schema_name")
);

CREATE TABLE IF NOT EXISTS "users" (
        "id" serial PRIMARY KEY NOT NULL,
        "username" text NOT NULL,
        "password" text NOT NULL,
        "email" text NOT NULL,
        "full_name" text NOT NULL,
        "role" text DEFAULT 'user' NOT NULL,
        "tenant_id" integer NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL,
        CONSTRAINT "users_username_unique" UNIQUE("username"),
        CONSTRAINT "users_email_unique" UNIQUE("email")
);

CREATE TABLE IF NOT EXISTS "webhook_data" (
        "id" serial PRIMARY KEY NOT NULL,
        "webhook_id" integer NOT NULL,
        "payload" jsonb NOT NULL,
        "processed_at" timestamp,
        "created_at" timestamp DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS "webhooks" (
        "id" serial PRIMARY KEY NOT NULL,
        "name" text NOT NULL,
        "endpoint" text NOT NULL,
        "secret" text,
        "is_active" boolean DEFAULT true NOT NULL,
        "tenant_id" integer NOT NULL,
        "created_by_id" integer NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL
);

DO $$ BEGIN
 ALTER TABLE "activities" ADD CONSTRAINT "activities_tenant_id_tenants_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "activities" ADD CONSTRAINT "activities_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "analyses" ADD CONSTRAINT "analyses_dataset_id_datasets_id_fk" FOREIGN KEY ("dataset_id") REFERENCES "public"."datasets"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "analyses" ADD CONSTRAINT "analyses_webhook_data_id_webhook_data_id_fk" FOREIGN KEY ("webhook_data_id") REFERENCES "public"."webhook_data"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "analyses" ADD CONSTRAINT "analyses_tenant_id_tenants_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "analyses" ADD CONSTRAINT "analyses_initiated_by_id_users_id_fk" FOREIGN KEY ("initiated_by_id") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "datasets" ADD CONSTRAINT "datasets_uploaded_by_id_users_id_fk" FOREIGN KEY ("uploaded_by_id") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "datasets" ADD CONSTRAINT "datasets_tenant_id_tenants_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "users" ADD CONSTRAINT "users_tenant_id_tenants_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "webhook_data" ADD CONSTRAINT "webhook_data_webhook_id_webhooks_id_fk" FOREIGN KEY ("webhook_id") REFERENCES "public"."webhooks"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "webhooks" ADD CONSTRAINT "webhooks_tenant_id_tenants_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
 ALTER TABLE "webhooks" ADD CONSTRAINT "webhooks_created_by_id_users_id_fk" FOREIGN KEY ("created_by_id") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;


error: permission denied for schema public
    at /opt/apps/AiGovernOriginal/AiGovernReplit2/node_modules/pg-pool/index.js:45:11
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.query (/opt/apps/AiGovernOriginal/AiGovernReplit2/node_modules/drizzle-kit/bin.cjs:65361:26)
    at async pgPush (/opt/apps/AiGovernOriginal/AiGovernReplit2/node_modules/drizzle-kit/bin.cjs:83118:13)
    at async Object.handler (/opt/apps/AiGovernOriginal/AiGovernReplit2/node_modules/drizzle-kit/bin.cjs:88645:9)
    at async run (/opt/apps/AiGovernOriginal/AiGovernReplit2/node_modules/drizzle-kit/bin.cjs:86970:7) {
  length: 99,
  severity: 'ERROR',
  code: '42501',
  detail: undefined,
  hint: undefined,
  position: '28',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'aclchk.c',
  line: '2812',
  routine: 'aclcheck_error'
}
root@ip-172-31-41-217:/opt/apps/AiGovernOriginal/AiGovernReplit2# more .env
DATABASE_URL=postgresql://ai_govern_user:your_password@localhost:5432/ai_govern
SESSION_SECRET=Test123